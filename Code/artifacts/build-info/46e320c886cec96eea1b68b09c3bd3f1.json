{
	"id": "46e320c886cec96eea1b68b09c3bd3f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Code/WaterCoinRules.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\n\ncontract WaterCoinRules {\n\n\n    enum CoinTypes{A, B, C}\n\n    uint256 A_supply;\n    uint256 B_supply;\n    uint256 C_supply;\n\n    mapping (CoinTypes => mapping (CoinTypes => uint256)) allowedTransfers;\n\n    address _owner;\n\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    modifier transferAllowed(CoinTypes from_coin, CoinTypes to_coin, uint256 amount){\n        require (allowedTransfers[from_coin][to_coin] >= amount, \"Amount of transfer exceeds limit across zones\");\n        _;\n    }\n\n    function checkTransferAllowed(CoinTypes from_coin, CoinTypes to_coin) public view returns (uint256){\n        return allowedTransfers[from_coin][to_coin];\n    }\n\n    function transferControl(CoinTypes from_coin, CoinTypes to_coin, address to, uint256 value) external transferAllowed(from_coin, to_coin, value) returns (bool) {\n        allowedTransfers[from_coin][to_coin] -= value;\n        allowedTransfers[to_coin][from_coin] += value;\n        return true;\n    }\n\n\n    function newSeason(uint256 a_supply_, uint256 b_supply_, uint256 c_supply_) external {\n        address from = msg.sender;\n\n        require(from == _owner, \"Only owner can start new season\");\n\n        A_supply = a_supply_;\n        B_supply = b_supply_;\n        C_supply = c_supply_;\n\n        allowedTransfers[CoinTypes.A][CoinTypes.C] = a_supply_;\n        allowedTransfers[CoinTypes.B][CoinTypes.C] = b_supply_;\n        allowedTransfers[CoinTypes.A][CoinTypes.B] = SafeMath.div(a_supply_, 2) ;\n        allowedTransfers[CoinTypes.B][CoinTypes.A] = SafeMath.div(b_supply_, 2);\n    }\n\n    \n\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Code/WaterCoinRules.sol": {
				"WaterCoinRules": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "enum WaterCoinRules.CoinTypes",
									"name": "from_coin",
									"type": "uint8"
								},
								{
									"internalType": "enum WaterCoinRules.CoinTypes",
									"name": "to_coin",
									"type": "uint8"
								}
							],
							"name": "checkTransferAllowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a_supply_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b_supply_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "c_supply_",
									"type": "uint256"
								}
							],
							"name": "newSeason",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum WaterCoinRules.CoinTypes",
									"name": "from_coin",
									"type": "uint8"
								},
								{
									"internalType": "enum WaterCoinRules.CoinTypes",
									"name": "to_coin",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferControl",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Code/WaterCoinRules.sol\":137:1695  contract WaterCoinRules {... */\n  mstore(0x40, 0x80)\n    /* \"Code/WaterCoinRules.sol\":363:413  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Code/WaterCoinRules.sol\":396:406  msg.sender */\n  caller\n    /* \"Code/WaterCoinRules.sol\":387:393  _owner */\n  0x04\n  0x00\n    /* \"Code/WaterCoinRules.sol\":387:406  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Code/WaterCoinRules.sol\":137:1695  contract WaterCoinRules {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Code/WaterCoinRules.sol\":137:1695  contract WaterCoinRules {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x235eed60\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa0478b4f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc9c3f849\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Code/WaterCoinRules.sol\":1107:1686  function newSeason(uint256 a_supply_, uint256 b_supply_, uint256 c_supply_) external {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Code/WaterCoinRules.sol\":803:1100  function transferControl(CoinTypes from_coin, CoinTypes to_coin, address to, uint256 value) external transferAllowed(from_coin, to_coin, value) returns (bool) {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Code/WaterCoinRules.sol\":638:797  function checkTransferAllowed(CoinTypes from_coin, CoinTypes to_coin) public view returns (uint256){... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Code/WaterCoinRules.sol\":1107:1686  function newSeason(uint256 a_supply_, uint256 b_supply_, uint256 c_supply_) external {... */\n    tag_9:\n        /* \"Code/WaterCoinRules.sol\":1202:1214  address from */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1217:1227  msg.sender */\n      caller\n        /* \"Code/WaterCoinRules.sol\":1202:1227  address from = msg.sender */\n      swap1\n      pop\n        /* \"Code/WaterCoinRules.sol\":1254:1260  _owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Code/WaterCoinRules.sol\":1246:1260  from == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Code/WaterCoinRules.sol\":1246:1250  from */\n      dup2\n        /* \"Code/WaterCoinRules.sol\":1246:1260  from == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Code/WaterCoinRules.sol\":1238:1296  require(from == _owner, \"Only owner can start new season\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Code/WaterCoinRules.sol\":1318:1327  a_supply_ */\n      dup4\n        /* \"Code/WaterCoinRules.sol\":1307:1315  A_supply */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1307:1327  A_supply = a_supply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1348:1357  b_supply_ */\n      dup3\n        /* \"Code/WaterCoinRules.sol\":1337:1345  B_supply */\n      0x01\n        /* \"Code/WaterCoinRules.sol\":1337:1357  B_supply = b_supply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1378:1387  c_supply_ */\n      dup2\n        /* \"Code/WaterCoinRules.sol\":1367:1375  C_supply */\n      0x02\n        /* \"Code/WaterCoinRules.sol\":1367:1387  C_supply = c_supply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1443:1452  a_supply_ */\n      dup4\n        /* \"Code/WaterCoinRules.sol\":1398:1414  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":1398:1427  allowedTransfers[CoinTypes.A] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1415:1426  CoinTypes.A */\n      dup1\n        /* \"Code/WaterCoinRules.sol\":1398:1427  allowedTransfers[CoinTypes.A] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n    tag_26:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      tag_30\n      tag_28\n      jump\t// in\n    tag_30:\n    tag_29:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1398:1440  allowedTransfers[CoinTypes.A][CoinTypes.C] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1428:1439  CoinTypes.C */\n      0x02\n        /* \"Code/WaterCoinRules.sol\":1398:1440  allowedTransfers[CoinTypes.A][CoinTypes.C] */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      tag_32\n      tag_28\n      jump\t// in\n    tag_32:\n    tag_31:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      tag_34\n      tag_28\n      jump\t// in\n    tag_34:\n    tag_33:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1398:1452  allowedTransfers[CoinTypes.A][CoinTypes.C] = a_supply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1507:1516  b_supply_ */\n      dup3\n        /* \"Code/WaterCoinRules.sol\":1462:1478  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":1462:1491  allowedTransfers[CoinTypes.B] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1479:1490  CoinTypes.B */\n      0x01\n        /* \"Code/WaterCoinRules.sol\":1462:1491  allowedTransfers[CoinTypes.B] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_36\n      tag_28\n      jump\t// in\n    tag_36:\n    tag_35:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      tag_38\n      tag_28\n      jump\t// in\n    tag_38:\n    tag_37:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1462:1504  allowedTransfers[CoinTypes.B][CoinTypes.C] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1492:1503  CoinTypes.C */\n      0x02\n        /* \"Code/WaterCoinRules.sol\":1462:1504  allowedTransfers[CoinTypes.B][CoinTypes.C] */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      tag_40\n      tag_28\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      tag_42\n      tag_28\n      jump\t// in\n    tag_42:\n    tag_41:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1462:1516  allowedTransfers[CoinTypes.B][CoinTypes.C] = b_supply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1571:1597  SafeMath.div(a_supply_, 2) */\n      tag_43\n        /* \"Code/WaterCoinRules.sol\":1584:1593  a_supply_ */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":1595:1596  2 */\n      0x02\n        /* \"Code/WaterCoinRules.sol\":1571:1583  SafeMath.div */\n      tag_44\n        /* \"Code/WaterCoinRules.sol\":1571:1597  SafeMath.div(a_supply_, 2) */\n      jump\t// in\n    tag_43:\n        /* \"Code/WaterCoinRules.sol\":1526:1542  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":1526:1555  allowedTransfers[CoinTypes.A] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1543:1554  CoinTypes.A */\n      dup1\n        /* \"Code/WaterCoinRules.sol\":1526:1555  allowedTransfers[CoinTypes.A] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      tag_46\n      tag_28\n      jump\t// in\n    tag_46:\n    tag_45:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      tag_48\n      tag_28\n      jump\t// in\n    tag_48:\n    tag_47:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1526:1568  allowedTransfers[CoinTypes.A][CoinTypes.B] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1556:1567  CoinTypes.B */\n      0x01\n        /* \"Code/WaterCoinRules.sol\":1526:1568  allowedTransfers[CoinTypes.A][CoinTypes.B] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_49\n      jumpi\n      tag_50\n      tag_28\n      jump\t// in\n    tag_50:\n    tag_49:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      tag_52\n      tag_28\n      jump\t// in\n    tag_52:\n    tag_51:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1526:1597  allowedTransfers[CoinTypes.A][CoinTypes.B] = SafeMath.div(a_supply_, 2) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1653:1679  SafeMath.div(b_supply_, 2) */\n      tag_53\n        /* \"Code/WaterCoinRules.sol\":1666:1675  b_supply_ */\n      dup4\n        /* \"Code/WaterCoinRules.sol\":1677:1678  2 */\n      0x02\n        /* \"Code/WaterCoinRules.sol\":1653:1665  SafeMath.div */\n      tag_44\n        /* \"Code/WaterCoinRules.sol\":1653:1679  SafeMath.div(b_supply_, 2) */\n      jump\t// in\n    tag_53:\n        /* \"Code/WaterCoinRules.sol\":1608:1624  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":1608:1637  allowedTransfers[CoinTypes.B] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1625:1636  CoinTypes.B */\n      0x01\n        /* \"Code/WaterCoinRules.sol\":1608:1637  allowedTransfers[CoinTypes.B] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      tag_55\n      tag_28\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_56\n      jumpi\n      tag_57\n      tag_28\n      jump\t// in\n    tag_57:\n    tag_56:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1608:1650  allowedTransfers[CoinTypes.B][CoinTypes.A] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1638:1649  CoinTypes.A */\n      dup1\n        /* \"Code/WaterCoinRules.sol\":1608:1650  allowedTransfers[CoinTypes.B][CoinTypes.A] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_58\n      jumpi\n      tag_59\n      tag_28\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_60\n      jumpi\n      tag_61\n      tag_28\n      jump\t// in\n    tag_61:\n    tag_60:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1608:1679  allowedTransfers[CoinTypes.B][CoinTypes.A] = SafeMath.div(b_supply_, 2) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1192:1686  {... */\n      pop\n        /* \"Code/WaterCoinRules.sol\":1107:1686  function newSeason(uint256 a_supply_, uint256 b_supply_, uint256 c_supply_) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Code/WaterCoinRules.sol\":803:1100  function transferControl(CoinTypes from_coin, CoinTypes to_coin, address to, uint256 value) external transferAllowed(from_coin, to_coin, value) returns (bool) {... */\n    tag_13:\n        /* \"Code/WaterCoinRules.sol\":956:960  bool */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":920:929  from_coin */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":931:938  to_coin */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":940:945  value */\n      dup4\n        /* \"Code/WaterCoinRules.sol\":558:564  amount */\n      dup1\n        /* \"Code/WaterCoinRules.sol\":518:534  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":518:545  allowedTransfers[from_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":535:544  from_coin */\n      dup6\n        /* \"Code/WaterCoinRules.sol\":518:545  allowedTransfers[from_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      tag_64\n      tag_28\n      jump\t// in\n    tag_64:\n    tag_63:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      tag_66\n      tag_28\n      jump\t// in\n    tag_66:\n    tag_65:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":518:554  allowedTransfers[from_coin][to_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":546:553  to_coin */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":518:554  allowedTransfers[from_coin][to_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_67\n      jumpi\n      tag_68\n      tag_28\n      jump\t// in\n    tag_68:\n    tag_67:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_69\n      jumpi\n      tag_70\n      tag_28\n      jump\t// in\n    tag_70:\n    tag_69:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Code/WaterCoinRules.sol\":518:564  allowedTransfers[from_coin][to_coin] >= amount */\n      lt\n      iszero\n        /* \"Code/WaterCoinRules.sol\":509:614  require (allowedTransfers[from_coin][to_coin] >= amount, \"Amount of transfer exceeds limit across zones\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"Code/WaterCoinRules.sol\":1012:1017  value */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":972:988  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":972:999  allowedTransfers[from_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":989:998  from_coin */\n      dup11\n        /* \"Code/WaterCoinRules.sol\":972:999  allowedTransfers[from_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_75\n      jumpi\n      tag_76\n      tag_28\n      jump\t// in\n    tag_76:\n    tag_75:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      tag_78\n      tag_28\n      jump\t// in\n    tag_78:\n    tag_77:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":972:1008  allowedTransfers[from_coin][to_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1000:1007  to_coin */\n      dup10\n        /* \"Code/WaterCoinRules.sol\":972:1008  allowedTransfers[from_coin][to_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_79\n      jumpi\n      tag_80\n      tag_28\n      jump\t// in\n    tag_80:\n    tag_79:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_81\n      jumpi\n      tag_82\n      tag_28\n      jump\t// in\n    tag_82:\n    tag_81:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Code/WaterCoinRules.sol\":972:1017  allowedTransfers[from_coin][to_coin] -= value */\n      dup3\n      dup3\n      sload\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1067:1072  value */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":1027:1043  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":1027:1052  allowedTransfers[to_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1044:1051  to_coin */\n      dup10\n        /* \"Code/WaterCoinRules.sol\":1027:1052  allowedTransfers[to_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_86\n      tag_28\n      jump\t// in\n    tag_86:\n    tag_85:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_88\n      tag_28\n      jump\t// in\n    tag_88:\n    tag_87:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":1027:1063  allowedTransfers[to_coin][from_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1053:1062  from_coin */\n      dup11\n        /* \"Code/WaterCoinRules.sol\":1027:1063  allowedTransfers[to_coin][from_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_90\n      tag_28\n      jump\t// in\n    tag_90:\n    tag_89:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_91\n      jumpi\n      tag_92\n      tag_28\n      jump\t// in\n    tag_92:\n    tag_91:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Code/WaterCoinRules.sol\":1027:1072  allowedTransfers[to_coin][from_coin] += value */\n      dup3\n      dup3\n      sload\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Code/WaterCoinRules.sol\":1089:1093  true */\n      0x01\n        /* \"Code/WaterCoinRules.sol\":1082:1093  return true */\n      swap4\n      pop\n        /* \"Code/WaterCoinRules.sol\":803:1100  function transferControl(CoinTypes from_coin, CoinTypes to_coin, address to, uint256 value) external transferAllowed(from_coin, to_coin, value) returns (bool) {... */\n      pop\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Code/WaterCoinRules.sol\":638:797  function checkTransferAllowed(CoinTypes from_coin, CoinTypes to_coin) public view returns (uint256){... */\n    tag_19:\n        /* \"Code/WaterCoinRules.sol\":729:736  uint256 */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":754:770  allowedTransfers */\n      0x03\n        /* \"Code/WaterCoinRules.sol\":754:781  allowedTransfers[from_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":771:780  from_coin */\n      dup5\n        /* \"Code/WaterCoinRules.sol\":754:781  allowedTransfers[from_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      tag_97\n      tag_28\n      jump\t// in\n    tag_97:\n    tag_96:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_99\n      tag_28\n      jump\t// in\n    tag_99:\n    tag_98:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Code/WaterCoinRules.sol\":754:790  allowedTransfers[from_coin][to_coin] */\n      0x00\n        /* \"Code/WaterCoinRules.sol\":782:789  to_coin */\n      dup4\n        /* \"Code/WaterCoinRules.sol\":754:790  allowedTransfers[from_coin][to_coin] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_100\n      jumpi\n      tag_101\n      tag_28\n      jump\t// in\n    tag_101:\n    tag_100:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_28\n      jump\t// in\n    tag_103:\n    tag_102:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Code/WaterCoinRules.sol\":747:790  return allowedTransfers[from_coin][to_coin] */\n      swap1\n      pop\n        /* \"Code/WaterCoinRules.sol\":638:797  function checkTransferAllowed(CoinTypes from_coin, CoinTypes to_coin) public view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_108:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_110\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:313   */\n    tag_112:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":247:253   */\n      dup2\n        /* \"#utility.yul\":234:254   */\n      calldataload\n        /* \"#utility.yul\":225:254   */\n      swap1\n      pop\n        /* \"#utility.yul\":263:307   */\n      tag_114\n        /* \"#utility.yul\":301:306   */\n      dup2\n        /* \"#utility.yul\":263:307   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":152:313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":319:458   */\n    tag_116:\n        /* \"#utility.yul\":365:370   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup2\n        /* \"#utility.yul\":390:410   */\n      calldataload\n        /* \"#utility.yul\":381:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":419:452   */\n      tag_118\n        /* \"#utility.yul\":446:451   */\n      dup2\n        /* \"#utility.yul\":419:452   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":319:458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":464:982   */\n    tag_18:\n        /* \"#utility.yul\":554:560   */\n      0x00\n        /* \"#utility.yul\":562:568   */\n      dup1\n        /* \"#utility.yul\":611:613   */\n      0x40\n        /* \"#utility.yul\":599:608   */\n      dup4\n        /* \"#utility.yul\":590:597   */\n      dup6\n        /* \"#utility.yul\":586:609   */\n      sub\n        /* \"#utility.yul\":582:614   */\n      slt\n        /* \"#utility.yul\":579:698   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":617:696   */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":579:698   */\n    tag_121:\n        /* \"#utility.yul\":737:738   */\n      0x00\n        /* \"#utility.yul\":762:826   */\n      tag_124\n        /* \"#utility.yul\":818:825   */\n      dup6\n        /* \"#utility.yul\":809:815   */\n      dup3\n        /* \"#utility.yul\":798:807   */\n      dup7\n        /* \"#utility.yul\":794:816   */\n      add\n        /* \"#utility.yul\":762:826   */\n      tag_112\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":752:826   */\n      swap3\n      pop\n        /* \"#utility.yul\":708:836   */\n      pop\n        /* \"#utility.yul\":875:877   */\n      0x20\n        /* \"#utility.yul\":901:965   */\n      tag_125\n        /* \"#utility.yul\":957:964   */\n      dup6\n        /* \"#utility.yul\":948:954   */\n      dup3\n        /* \"#utility.yul\":937:946   */\n      dup7\n        /* \"#utility.yul\":933:955   */\n      add\n        /* \"#utility.yul\":901:965   */\n      tag_112\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":891:965   */\n      swap2\n      pop\n        /* \"#utility.yul\":846:975   */\n      pop\n        /* \"#utility.yul\":464:982   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":988:1797   */\n    tag_12:\n        /* \"#utility.yul\":1096:1102   */\n      0x00\n        /* \"#utility.yul\":1104:1110   */\n      dup1\n        /* \"#utility.yul\":1112:1118   */\n      0x00\n        /* \"#utility.yul\":1120:1126   */\n      dup1\n        /* \"#utility.yul\":1169:1172   */\n      0x80\n        /* \"#utility.yul\":1157:1166   */\n      dup6\n        /* \"#utility.yul\":1148:1155   */\n      dup8\n        /* \"#utility.yul\":1144:1167   */\n      sub\n        /* \"#utility.yul\":1140:1173   */\n      slt\n        /* \"#utility.yul\":1137:1257   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":1176:1255   */\n      tag_128\n      tag_123\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1137:1257   */\n    tag_127:\n        /* \"#utility.yul\":1296:1297   */\n      0x00\n        /* \"#utility.yul\":1321:1385   */\n      tag_129\n        /* \"#utility.yul\":1377:1384   */\n      dup8\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup9\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1321:1385   */\n      tag_112\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1311:1385   */\n      swap5\n      pop\n        /* \"#utility.yul\":1267:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x20\n        /* \"#utility.yul\":1460:1524   */\n      tag_130\n        /* \"#utility.yul\":1516:1523   */\n      dup8\n        /* \"#utility.yul\":1507:1513   */\n      dup3\n        /* \"#utility.yul\":1496:1505   */\n      dup9\n        /* \"#utility.yul\":1492:1514   */\n      add\n        /* \"#utility.yul\":1460:1524   */\n      tag_112\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1450:1524   */\n      swap4\n      pop\n        /* \"#utility.yul\":1405:1534   */\n      pop\n        /* \"#utility.yul\":1573:1575   */\n      0x40\n        /* \"#utility.yul\":1599:1652   */\n      tag_131\n        /* \"#utility.yul\":1644:1651   */\n      dup8\n        /* \"#utility.yul\":1635:1641   */\n      dup3\n        /* \"#utility.yul\":1624:1633   */\n      dup9\n        /* \"#utility.yul\":1620:1642   */\n      add\n        /* \"#utility.yul\":1599:1652   */\n      tag_108\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1589:1652   */\n      swap3\n      pop\n        /* \"#utility.yul\":1544:1662   */\n      pop\n        /* \"#utility.yul\":1701:1703   */\n      0x60\n        /* \"#utility.yul\":1727:1780   */\n      tag_132\n        /* \"#utility.yul\":1772:1779   */\n      dup8\n        /* \"#utility.yul\":1763:1769   */\n      dup3\n        /* \"#utility.yul\":1752:1761   */\n      dup9\n        /* \"#utility.yul\":1748:1770   */\n      add\n        /* \"#utility.yul\":1727:1780   */\n      tag_116\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1717:1780   */\n      swap2\n      pop\n        /* \"#utility.yul\":1672:1790   */\n      pop\n        /* \"#utility.yul\":988:1797   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2422   */\n    tag_8:\n        /* \"#utility.yul\":1880:1886   */\n      0x00\n        /* \"#utility.yul\":1888:1894   */\n      dup1\n        /* \"#utility.yul\":1896:1902   */\n      0x00\n        /* \"#utility.yul\":1945:1947   */\n      0x60\n        /* \"#utility.yul\":1933:1942   */\n      dup5\n        /* \"#utility.yul\":1924:1931   */\n      dup7\n        /* \"#utility.yul\":1920:1943   */\n      sub\n        /* \"#utility.yul\":1916:1948   */\n      slt\n        /* \"#utility.yul\":1913:2032   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1951:2030   */\n      tag_135\n      tag_123\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1913:2032   */\n    tag_134:\n        /* \"#utility.yul\":2071:2072   */\n      0x00\n        /* \"#utility.yul\":2096:2149   */\n      tag_136\n        /* \"#utility.yul\":2141:2148   */\n      dup7\n        /* \"#utility.yul\":2132:2138   */\n      dup3\n        /* \"#utility.yul\":2121:2130   */\n      dup8\n        /* \"#utility.yul\":2117:2139   */\n      add\n        /* \"#utility.yul\":2096:2149   */\n      tag_116\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2086:2149   */\n      swap4\n      pop\n        /* \"#utility.yul\":2042:2159   */\n      pop\n        /* \"#utility.yul\":2198:2200   */\n      0x20\n        /* \"#utility.yul\":2224:2277   */\n      tag_137\n        /* \"#utility.yul\":2269:2276   */\n      dup7\n        /* \"#utility.yul\":2260:2266   */\n      dup3\n        /* \"#utility.yul\":2249:2258   */\n      dup8\n        /* \"#utility.yul\":2245:2267   */\n      add\n        /* \"#utility.yul\":2224:2277   */\n      tag_116\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2214:2277   */\n      swap3\n      pop\n        /* \"#utility.yul\":2169:2287   */\n      pop\n        /* \"#utility.yul\":2326:2328   */\n      0x40\n        /* \"#utility.yul\":2352:2405   */\n      tag_138\n        /* \"#utility.yul\":2397:2404   */\n      dup7\n        /* \"#utility.yul\":2388:2394   */\n      dup3\n        /* \"#utility.yul\":2377:2386   */\n      dup8\n        /* \"#utility.yul\":2373:2395   */\n      add\n        /* \"#utility.yul\":2352:2405   */\n      tag_116\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2342:2405   */\n      swap2\n      pop\n        /* \"#utility.yul\":2297:2415   */\n      pop\n        /* \"#utility.yul\":1803:2422   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2428:2537   */\n    tag_139:\n        /* \"#utility.yul\":2509:2530   */\n      tag_141\n        /* \"#utility.yul\":2524:2529   */\n      dup2\n        /* \"#utility.yul\":2509:2530   */\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2504:2507   */\n      dup3\n        /* \"#utility.yul\":2497:2531   */\n      mstore\n        /* \"#utility.yul\":2428:2537   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2909   */\n    tag_143:\n        /* \"#utility.yul\":2685:2688   */\n      0x00\n        /* \"#utility.yul\":2706:2773   */\n      tag_145\n        /* \"#utility.yul\":2770:2772   */\n      0x2d\n        /* \"#utility.yul\":2765:2768   */\n      dup4\n        /* \"#utility.yul\":2706:2773   */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2699:2773   */\n      swap2\n      pop\n        /* \"#utility.yul\":2782:2875   */\n      tag_147\n        /* \"#utility.yul\":2871:2874   */\n      dup3\n        /* \"#utility.yul\":2782:2875   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2900:2902   */\n      0x40\n        /* \"#utility.yul\":2895:2898   */\n      dup3\n        /* \"#utility.yul\":2891:2903   */\n      add\n        /* \"#utility.yul\":2884:2903   */\n      swap1\n      pop\n        /* \"#utility.yul\":2543:2909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3281   */\n    tag_149:\n        /* \"#utility.yul\":3057:3060   */\n      0x00\n        /* \"#utility.yul\":3078:3145   */\n      tag_151\n        /* \"#utility.yul\":3142:3144   */\n      0x1f\n        /* \"#utility.yul\":3137:3140   */\n      dup4\n        /* \"#utility.yul\":3078:3145   */\n      tag_146\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3071:3145   */\n      swap2\n      pop\n        /* \"#utility.yul\":3154:3247   */\n      tag_152\n        /* \"#utility.yul\":3243:3246   */\n      dup3\n        /* \"#utility.yul\":3154:3247   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3272:3274   */\n      0x20\n        /* \"#utility.yul\":3267:3270   */\n      dup3\n        /* \"#utility.yul\":3263:3275   */\n      add\n        /* \"#utility.yul\":3256:3275   */\n      swap1\n      pop\n        /* \"#utility.yul\":2915:3281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3287:3405   */\n    tag_154:\n        /* \"#utility.yul\":3374:3398   */\n      tag_156\n        /* \"#utility.yul\":3392:3397   */\n      dup2\n        /* \"#utility.yul\":3374:3398   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3369:3372   */\n      dup3\n        /* \"#utility.yul\":3362:3399   */\n      mstore\n        /* \"#utility.yul\":3287:3405   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3621   */\n    tag_15:\n        /* \"#utility.yul\":3498:3502   */\n      0x00\n        /* \"#utility.yul\":3536:3538   */\n      0x20\n        /* \"#utility.yul\":3525:3534   */\n      dup3\n        /* \"#utility.yul\":3521:3539   */\n      add\n        /* \"#utility.yul\":3513:3539   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3614   */\n      tag_159\n        /* \"#utility.yul\":3611:3612   */\n      0x00\n        /* \"#utility.yul\":3600:3609   */\n      dup4\n        /* \"#utility.yul\":3596:3613   */\n      add\n        /* \"#utility.yul\":3587:3593   */\n      dup5\n        /* \"#utility.yul\":3549:3614   */\n      tag_139\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3411:3621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3627:4046   */\n    tag_73:\n        /* \"#utility.yul\":3793:3797   */\n      0x00\n        /* \"#utility.yul\":3831:3833   */\n      0x20\n        /* \"#utility.yul\":3820:3829   */\n      dup3\n        /* \"#utility.yul\":3816:3834   */\n      add\n        /* \"#utility.yul\":3808:3834   */\n      swap1\n      pop\n        /* \"#utility.yul\":3880:3889   */\n      dup2\n        /* \"#utility.yul\":3874:3878   */\n      dup2\n        /* \"#utility.yul\":3870:3890   */\n      sub\n        /* \"#utility.yul\":3866:3867   */\n      0x00\n        /* \"#utility.yul\":3855:3864   */\n      dup4\n        /* \"#utility.yul\":3851:3868   */\n      add\n        /* \"#utility.yul\":3844:3891   */\n      mstore\n        /* \"#utility.yul\":3908:4039   */\n      tag_161\n        /* \"#utility.yul\":4034:4038   */\n      dup2\n        /* \"#utility.yul\":3908:4039   */\n      tag_143\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3900:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":3627:4046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4052:4471   */\n    tag_25:\n        /* \"#utility.yul\":4218:4222   */\n      0x00\n        /* \"#utility.yul\":4256:4258   */\n      0x20\n        /* \"#utility.yul\":4245:4254   */\n      dup3\n        /* \"#utility.yul\":4241:4259   */\n      add\n        /* \"#utility.yul\":4233:4259   */\n      swap1\n      pop\n        /* \"#utility.yul\":4305:4314   */\n      dup2\n        /* \"#utility.yul\":4299:4303   */\n      dup2\n        /* \"#utility.yul\":4295:4315   */\n      sub\n        /* \"#utility.yul\":4291:4292   */\n      0x00\n        /* \"#utility.yul\":4280:4289   */\n      dup4\n        /* \"#utility.yul\":4276:4293   */\n      add\n        /* \"#utility.yul\":4269:4316   */\n      mstore\n        /* \"#utility.yul\":4333:4464   */\n      tag_163\n        /* \"#utility.yul\":4459:4463   */\n      dup2\n        /* \"#utility.yul\":4333:4464   */\n      tag_149\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4325:4464   */\n      swap1\n      pop\n        /* \"#utility.yul\":4052:4471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4477:4699   */\n    tag_21:\n        /* \"#utility.yul\":4570:4574   */\n      0x00\n        /* \"#utility.yul\":4608:4610   */\n      0x20\n        /* \"#utility.yul\":4597:4606   */\n      dup3\n        /* \"#utility.yul\":4593:4611   */\n      add\n        /* \"#utility.yul\":4585:4611   */\n      swap1\n      pop\n        /* \"#utility.yul\":4621:4692   */\n      tag_165\n        /* \"#utility.yul\":4689:4690   */\n      0x00\n        /* \"#utility.yul\":4678:4687   */\n      dup4\n        /* \"#utility.yul\":4674:4691   */\n      add\n        /* \"#utility.yul\":4665:4671   */\n      dup5\n        /* \"#utility.yul\":4621:4692   */\n      tag_154\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4477:4699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4955   */\n    tag_146:\n        /* \"#utility.yul\":4870:4881   */\n      0x00\n        /* \"#utility.yul\":4904:4910   */\n      dup3\n        /* \"#utility.yul\":4899:4902   */\n      dup3\n        /* \"#utility.yul\":4892:4911   */\n      mstore\n        /* \"#utility.yul\":4944:4948   */\n      0x20\n        /* \"#utility.yul\":4939:4942   */\n      dup3\n        /* \"#utility.yul\":4935:4949   */\n      add\n        /* \"#utility.yul\":4920:4949   */\n      swap1\n      pop\n        /* \"#utility.yul\":4786:4955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5266   */\n    tag_94:\n        /* \"#utility.yul\":5001:5004   */\n      0x00\n        /* \"#utility.yul\":5020:5040   */\n      tag_170\n        /* \"#utility.yul\":5038:5039   */\n      dup3\n        /* \"#utility.yul\":5020:5040   */\n      tag_157\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5015:5040   */\n      swap2\n      pop\n        /* \"#utility.yul\":5054:5074   */\n      tag_171\n        /* \"#utility.yul\":5072:5073   */\n      dup4\n        /* \"#utility.yul\":5054:5074   */\n      tag_157\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5049:5074   */\n      swap3\n      pop\n        /* \"#utility.yul\":5208:5209   */\n      dup3\n        /* \"#utility.yul\":5140:5206   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5136:5210   */\n      sub\n        /* \"#utility.yul\":5133:5134   */\n      dup3\n        /* \"#utility.yul\":5130:5211   */\n      gt\n        /* \"#utility.yul\":5127:5234   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":5214:5232   */\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5127:5234   */\n    tag_172:\n        /* \"#utility.yul\":5258:5259   */\n      dup3\n        /* \"#utility.yul\":5255:5256   */\n      dup3\n        /* \"#utility.yul\":5251:5260   */\n      add\n        /* \"#utility.yul\":5244:5260   */\n      swap1\n      pop\n        /* \"#utility.yul\":4961:5266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5272:5457   */\n    tag_106:\n        /* \"#utility.yul\":5312:5313   */\n      0x00\n        /* \"#utility.yul\":5329:5349   */\n      tag_176\n        /* \"#utility.yul\":5347:5348   */\n      dup3\n        /* \"#utility.yul\":5329:5349   */\n      tag_157\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5324:5349   */\n      swap2\n      pop\n        /* \"#utility.yul\":5363:5383   */\n      tag_177\n        /* \"#utility.yul\":5381:5382   */\n      dup4\n        /* \"#utility.yul\":5363:5383   */\n      tag_157\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5358:5383   */\n      swap3\n      pop\n        /* \"#utility.yul\":5402:5403   */\n      dup3\n        /* \"#utility.yul\":5392:5427   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5407:5425   */\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5392:5427   */\n    tag_178:\n        /* \"#utility.yul\":5449:5450   */\n      dup3\n        /* \"#utility.yul\":5446:5447   */\n      dup3\n        /* \"#utility.yul\":5442:5451   */\n      div\n        /* \"#utility.yul\":5437:5451   */\n      swap1\n      pop\n        /* \"#utility.yul\":5272:5457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5463:5654   */\n    tag_84:\n        /* \"#utility.yul\":5503:5507   */\n      0x00\n        /* \"#utility.yul\":5523:5543   */\n      tag_182\n        /* \"#utility.yul\":5541:5542   */\n      dup3\n        /* \"#utility.yul\":5523:5543   */\n      tag_157\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5518:5543   */\n      swap2\n      pop\n        /* \"#utility.yul\":5557:5577   */\n      tag_183\n        /* \"#utility.yul\":5575:5576   */\n      dup4\n        /* \"#utility.yul\":5557:5577   */\n      tag_157\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5552:5577   */\n      swap3\n      pop\n        /* \"#utility.yul\":5596:5597   */\n      dup3\n        /* \"#utility.yul\":5593:5594   */\n      dup3\n        /* \"#utility.yul\":5590:5598   */\n      lt\n        /* \"#utility.yul\":5587:5621   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":5601:5619   */\n      tag_185\n      tag_174\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5587:5621   */\n    tag_184:\n        /* \"#utility.yul\":5646:5647   */\n      dup3\n        /* \"#utility.yul\":5643:5644   */\n      dup3\n        /* \"#utility.yul\":5639:5648   */\n      sub\n        /* \"#utility.yul\":5631:5648   */\n      swap1\n      pop\n        /* \"#utility.yul\":5463:5654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5660:5756   */\n    tag_186:\n        /* \"#utility.yul\":5697:5704   */\n      0x00\n        /* \"#utility.yul\":5726:5750   */\n      tag_188\n        /* \"#utility.yul\":5744:5749   */\n      dup3\n        /* \"#utility.yul\":5726:5750   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5715:5750   */\n      swap1\n      pop\n        /* \"#utility.yul\":5660:5756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5852   */\n    tag_142:\n        /* \"#utility.yul\":5796:5803   */\n      0x00\n        /* \"#utility.yul\":5839:5844   */\n      dup2\n        /* \"#utility.yul\":5832:5845   */\n      iszero\n        /* \"#utility.yul\":5825:5846   */\n      iszero\n        /* \"#utility.yul\":5814:5846   */\n      swap1\n      pop\n        /* \"#utility.yul\":5762:5852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5858:5984   */\n    tag_189:\n        /* \"#utility.yul\":5895:5902   */\n      0x00\n        /* \"#utility.yul\":5935:5977   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5928:5933   */\n      dup3\n        /* \"#utility.yul\":5924:5978   */\n      and\n        /* \"#utility.yul\":5913:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5858:5984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5990:6067   */\n    tag_157:\n        /* \"#utility.yul\":6027:6034   */\n      0x00\n        /* \"#utility.yul\":6056:6061   */\n      dup2\n        /* \"#utility.yul\":6045:6061   */\n      swap1\n      pop\n        /* \"#utility.yul\":5990:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6253   */\n    tag_174:\n        /* \"#utility.yul\":6121:6198   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6118:6119   */\n      0x00\n        /* \"#utility.yul\":6111:6199   */\n      mstore\n        /* \"#utility.yul\":6218:6222   */\n      0x11\n        /* \"#utility.yul\":6215:6216   */\n      0x04\n        /* \"#utility.yul\":6208:6223   */\n      mstore\n        /* \"#utility.yul\":6242:6246   */\n      0x24\n        /* \"#utility.yul\":6239:6240   */\n      0x00\n        /* \"#utility.yul\":6232:6247   */\n      revert\n        /* \"#utility.yul\":6259:6439   */\n    tag_180:\n        /* \"#utility.yul\":6307:6384   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6297:6385   */\n      mstore\n        /* \"#utility.yul\":6404:6408   */\n      0x12\n        /* \"#utility.yul\":6401:6402   */\n      0x04\n        /* \"#utility.yul\":6394:6409   */\n      mstore\n        /* \"#utility.yul\":6428:6432   */\n      0x24\n        /* \"#utility.yul\":6425:6426   */\n      0x00\n        /* \"#utility.yul\":6418:6433   */\n      revert\n        /* \"#utility.yul\":6445:6625   */\n    tag_28:\n        /* \"#utility.yul\":6493:6570   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6490:6491   */\n      0x00\n        /* \"#utility.yul\":6483:6571   */\n      mstore\n        /* \"#utility.yul\":6590:6594   */\n      0x21\n        /* \"#utility.yul\":6587:6588   */\n      0x04\n        /* \"#utility.yul\":6580:6595   */\n      mstore\n        /* \"#utility.yul\":6614:6618   */\n      0x24\n        /* \"#utility.yul\":6611:6612   */\n      0x00\n        /* \"#utility.yul\":6604:6619   */\n      revert\n        /* \"#utility.yul\":6754:6871   */\n    tag_123:\n        /* \"#utility.yul\":6863:6864   */\n      0x00\n        /* \"#utility.yul\":6860:6861   */\n      dup1\n        /* \"#utility.yul\":6853:6865   */\n      revert\n        /* \"#utility.yul\":6877:7109   */\n    tag_148:\n        /* \"#utility.yul\":7017:7051   */\n      0x416d6f756e74206f66207472616e736665722065786365656473206c696d6974\n        /* \"#utility.yul\":7013:7014   */\n      0x00\n        /* \"#utility.yul\":7005:7011   */\n      dup3\n        /* \"#utility.yul\":7001:7015   */\n      add\n        /* \"#utility.yul\":6994:7052   */\n      mstore\n        /* \"#utility.yul\":7086:7101   */\n      0x206163726f7373207a6f6e657300000000000000000000000000000000000000\n        /* \"#utility.yul\":7081:7083   */\n      0x20\n        /* \"#utility.yul\":7073:7079   */\n      dup3\n        /* \"#utility.yul\":7069:7084   */\n      add\n        /* \"#utility.yul\":7062:7102   */\n      mstore\n        /* \"#utility.yul\":6877:7109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7115:7296   */\n    tag_153:\n        /* \"#utility.yul\":7255:7288   */\n      0x4f6e6c79206f776e65722063616e207374617274206e657720736561736f6e00\n        /* \"#utility.yul\":7251:7252   */\n      0x00\n        /* \"#utility.yul\":7243:7249   */\n      dup3\n        /* \"#utility.yul\":7239:7253   */\n      add\n        /* \"#utility.yul\":7232:7289   */\n      mstore\n        /* \"#utility.yul\":7115:7296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7302:7424   */\n    tag_111:\n        /* \"#utility.yul\":7375:7399   */\n      tag_202\n        /* \"#utility.yul\":7393:7398   */\n      dup2\n        /* \"#utility.yul\":7375:7399   */\n      tag_186\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7368:7373   */\n      dup2\n        /* \"#utility.yul\":7365:7400   */\n      eq\n        /* \"#utility.yul\":7355:7418   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":7414:7415   */\n      0x00\n        /* \"#utility.yul\":7411:7412   */\n      dup1\n        /* \"#utility.yul\":7404:7416   */\n      revert\n        /* \"#utility.yul\":7355:7418   */\n    tag_203:\n        /* \"#utility.yul\":7302:7424   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7430:7540   */\n    tag_115:\n        /* \"#utility.yul\":7514:7515   */\n      0x03\n        /* \"#utility.yul\":7507:7512   */\n      dup2\n        /* \"#utility.yul\":7504:7516   */\n      lt\n        /* \"#utility.yul\":7494:7534   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7527:7528   */\n      dup1\n        /* \"#utility.yul\":7520:7532   */\n      revert\n        /* \"#utility.yul\":7494:7534   */\n    tag_205:\n        /* \"#utility.yul\":7430:7540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7546:7668   */\n    tag_119:\n        /* \"#utility.yul\":7619:7643   */\n      tag_207\n        /* \"#utility.yul\":7637:7642   */\n      dup2\n        /* \"#utility.yul\":7619:7643   */\n      tag_157\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7612:7617   */\n      dup2\n        /* \"#utility.yul\":7609:7644   */\n      eq\n        /* \"#utility.yul\":7599:7662   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":7658:7659   */\n      0x00\n        /* \"#utility.yul\":7655:7656   */\n      dup1\n        /* \"#utility.yul\":7648:7660   */\n      revert\n        /* \"#utility.yul\":7599:7662   */\n    tag_208:\n        /* \"#utility.yul\":7546:7668   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122048866f47431e6316d7b663169960785fbdb2cadd6fcf58429f4cf9da661ccc0a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a48806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063235eed6014610046578063a0478b4f14610062578063c9c3f84914610092575b600080fd5b610060600480360381019061005b9190610689565b6100c2565b005b61007c60048036038101906100779190610622565b61034d565b6040516100899190610740565b60405180910390f35b6100ac60048036038101906100a791906105e2565b610516565b6040516100b9919061079b565b60405180910390f35b6000339050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014e9061077b565b60405180910390fd5b836000819055508260018190555081600281905550836003600080600281111561018457610183610928565b5b600281111561019657610195610928565b5b815260200190815260200160002060006002808111156101b9576101b8610928565b5b60028111156101cb576101ca610928565b5b8152602001908152602001600020819055508260036000600160028111156101f6576101f5610928565b5b600281111561020857610207610928565b5b8152602001908152602001600020600060028081111561022b5761022a610928565b5b600281111561023d5761023c610928565b5b81526020019081526020016000208190555061025a84600261058d565b6003600080600281111561027157610270610928565b5b600281111561028357610282610928565b5b81526020019081526020016000206000600160028111156102a7576102a6610928565b5b60028111156102b9576102b8610928565b5b8152602001908152602001600020819055506102d683600261058d565b60036000600160028111156102ee576102ed610928565b5b6002811115610300576102ff610928565b5b8152602001908152602001600020600080600281111561032357610322610928565b5b600281111561033557610334610928565b5b81526020019081526020016000208190555050505050565b6000848483806003600085600281111561036a57610369610928565b5b600281111561037c5761037b610928565b5b8152602001908152602001600020600084600281111561039f5761039e610928565b5b60028111156103b1576103b0610928565b5b8152602001908152602001600020541015610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f89061075b565b60405180910390fd5b84600360008a600281111561041957610418610928565b5b600281111561042b5761042a610928565b5b8152602001908152602001600020600089600281111561044e5761044d610928565b5b60028111156104605761045f610928565b5b8152602001908152602001600020600082825461047d919061084e565b92505081905550846003600089600281111561049c5761049b610928565b5b60028111156104ae576104ad610928565b5b815260200190815260200160002060008a60028111156104d1576104d0610928565b5b60028111156104e3576104e2610928565b5b8152602001908152602001600020600082825461050091906107c7565b9250508190555060019350505050949350505050565b60006003600084600281111561052f5761052e610928565b5b600281111561054157610540610928565b5b8152602001908152602001600020600083600281111561056457610563610928565b5b600281111561057657610575610928565b5b815260200190815260200160002054905092915050565b6000818361059b919061081d565b905092915050565b6000813590506105b2816109d4565b92915050565b6000813590506105c7816109eb565b92915050565b6000813590506105dc816109fb565b92915050565b600080604083850312156105f9576105f8610957565b5b6000610607858286016105b8565b9250506020610618858286016105b8565b9150509250929050565b6000806000806080858703121561063c5761063b610957565b5b600061064a878288016105b8565b945050602061065b878288016105b8565b935050604061066c878288016105a3565b925050606061067d878288016105cd565b91505092959194509250565b6000806000606084860312156106a2576106a1610957565b5b60006106b0868287016105cd565b93505060206106c1868287016105cd565b92505060406106d2868287016105cd565b9150509250925092565b6106e581610894565b82525050565b60006106f8602d836107b6565b91506107038261095c565b604082019050919050565b600061071b601f836107b6565b9150610726826109ab565b602082019050919050565b61073a816108c0565b82525050565b600060208201905061075560008301846106dc565b92915050565b60006020820190508181036000830152610774816106eb565b9050919050565b600060208201905081810360008301526107948161070e565b9050919050565b60006020820190506107b06000830184610731565b92915050565b600082825260208201905092915050565b60006107d2826108c0565b91506107dd836108c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610812576108116108ca565b5b828201905092915050565b6000610828826108c0565b9150610833836108c0565b925082610843576108426108f9565b5b828204905092915050565b6000610859826108c0565b9150610864836108c0565b925082821015610877576108766108ca565b5b828203905092915050565b600061088d826108a0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b7f416d6f756e74206f66207472616e736665722065786365656473206c696d697460008201527f206163726f7373207a6f6e657300000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e207374617274206e657720736561736f6e00600082015250565b6109dd81610882565b81146109e857600080fd5b50565b600381106109f857600080fd5b50565b610a04816108c0565b8114610a0f57600080fd5b5056fea264697066735822122048866f47431e6316d7b663169960785fbdb2cadd6fcf58429f4cf9da661ccc0a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xA48 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x235EED60 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA0478B4F EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xC9C3F849 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x689 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x157 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP1 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184 JUMPI PUSH2 0x183 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x22B JUMPI PUSH2 0x22A PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x25A DUP5 PUSH1 0x2 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x2B8 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2D6 DUP4 PUSH1 0x2 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EE JUMPI PUSH2 0x2ED PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FF PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x335 JUMPI PUSH2 0x334 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP4 DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x37C JUMPI PUSH2 0x37B PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39F JUMPI PUSH2 0x39E PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3B0 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x419 JUMPI PUSH2 0x418 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH2 0x44D PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x460 JUMPI PUSH2 0x45F PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49B PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4E3 JUMPI PUSH2 0x4E2 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x7C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B2 DUP2 PUSH2 0x9D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5C7 DUP2 PUSH2 0x9EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5DC DUP2 PUSH2 0x9FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F9 JUMPI PUSH2 0x5F8 PUSH2 0x957 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x607 DUP6 DUP3 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x618 DUP6 DUP3 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x957 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x64A DUP8 DUP3 DUP9 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x65B DUP8 DUP3 DUP9 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x66C DUP8 DUP3 DUP9 ADD PUSH2 0x5A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x67D DUP8 DUP3 DUP9 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x957 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B0 DUP7 DUP3 DUP8 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6C1 DUP7 DUP3 DUP8 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6D2 DUP7 DUP3 DUP8 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x6E5 DUP2 PUSH2 0x894 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH1 0x2D DUP4 PUSH2 0x7B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x703 DUP3 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71B PUSH1 0x1F DUP4 PUSH2 0x7B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x726 DUP3 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x8C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x755 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x774 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x794 DUP2 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x731 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x8CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x828 DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x833 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x843 JUMPI PUSH2 0x842 PUSH2 0x8F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x864 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x877 JUMPI PUSH2 0x876 PUSH2 0x8CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88D DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x416D6F756E74206F66207472616E736665722065786365656473206C696D6974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206163726F7373207A6F6E657300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207374617274206E657720736561736F6E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9DD DUP2 PUSH2 0x882 JUMP JUMPDEST DUP2 EQ PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA04 DUP2 PUSH2 0x8C0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DUP7 PUSH16 0x47431E6316D7B663169960785FBDB2CA 0xDD PUSH16 0xCF58429F4CF9DA661CCC0A64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "137:1558:0:-:0;;;363:50;;;;;;;;;;396:10;387:6;;:19;;;;;;;;;;;;;;;;;;137:1558;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkTransferAllowed_72": {
									"entryPoint": 1302,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_415": {
									"entryPoint": 1421,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@newSeason_193": {
									"entryPoint": 194,
									"id": 193,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferControl_111": {
									"entryPoint": 845,
									"id": 111,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_CoinTypes_$6": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_CoinTypes_$6t_enum$_CoinTypes_$6": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_enum$_CoinTypes_$6t_enum$_CoinTypes_$6t_addresst_uint256": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_CoinTypes_$6": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7671:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:98:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "247:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "234:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "301:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_CoinTypes_$6",
																	"nodeType": "YulIdentifier",
																	"src": "263:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "263:44:2"
														}
													]
												},
												"name": "abi_decode_t_enum$_CoinTypes_$6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:2",
														"type": ""
													}
												],
												"src": "152:161:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "371:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "381:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "390:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "381:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "446:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "419:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "419:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "349:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "357:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "365:5:2",
														"type": ""
													}
												],
												"src": "319:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "569:413:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "615:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "617:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "617:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "617:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "590:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "599:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:32:2"
															},
															"nodeType": "YulIf",
															"src": "579:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "708:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "723:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "737:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "727:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "752:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "798:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "809:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "794:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "794:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "818:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_CoinTypes_$6",
																			"nodeType": "YulIdentifier",
																			"src": "762:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "762:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "752:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "846:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "861:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "875:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "865:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "891:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "937:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "948:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "933:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "933:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "957:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_CoinTypes_$6",
																			"nodeType": "YulIdentifier",
																			"src": "901:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "891:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_CoinTypes_$6t_enum$_CoinTypes_$6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "531:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "542:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "554:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "562:6:2",
														"type": ""
													}
												],
												"src": "464:518:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1127:670:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1176:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1148:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1157:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1144:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1169:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:33:2"
															},
															"nodeType": "YulIf",
															"src": "1137:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1267:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1282:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1296:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1286:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1311:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_CoinTypes_$6",
																			"nodeType": "YulIdentifier",
																			"src": "1321:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1321:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1311:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1496:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1507:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1492:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1492:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1516:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_CoinTypes_$6",
																			"nodeType": "YulIdentifier",
																			"src": "1460:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1544:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1559:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1563:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1589:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1624:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1635:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1620:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1620:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1644:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1599:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1589:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1672:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1687:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1701:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1691:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1717:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1752:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1763:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1748:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1748:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1772:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1727:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1717:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_CoinTypes_$6t_enum$_CoinTypes_$6t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1073:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1084:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1096:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1104:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1112:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1120:6:2",
														"type": ""
													}
												],
												"src": "988:809:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1903:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1949:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1951:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1951:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1951:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:32:2"
															},
															"nodeType": "YulIf",
															"src": "1913:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2042:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2057:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2061:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2086:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2121:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2132:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2117:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2117:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2141:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2096:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2086:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2169:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2184:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2188:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2214:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2249:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2260:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2245:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2245:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2269:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2224:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2214:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2297:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2312:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2316:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2342:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2377:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2388:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2373:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2373:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2397:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2352:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2342:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1857:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1868:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1880:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1888:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1896:6:2",
														"type": ""
													}
												],
												"src": "1803:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2487:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2524:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2509:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2497:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2497:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2475:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2482:3:2",
														"type": ""
													}
												],
												"src": "2428:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2689:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2699:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2765:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2770:2:2",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2706:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2706:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2699:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2871:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5",
																	"nodeType": "YulIdentifier",
																	"src": "2782:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2782:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2884:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2895:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2900:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2891:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2891:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2677:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2685:3:2",
														"type": ""
													}
												],
												"src": "2543:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3137:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3078:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3071:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3243:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d",
																	"nodeType": "YulIdentifier",
																	"src": "3154:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3256:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3267:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3049:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3057:3:2",
														"type": ""
													}
												],
												"src": "2915:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3352:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3374:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3374:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3362:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3362:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3340:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3347:3:2",
														"type": ""
													}
												],
												"src": "3287:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3503:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3513:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3525:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3521:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3513:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3587:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3611:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3596:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3549:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3549:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3475:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3487:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3498:4:2",
														"type": ""
													}
												],
												"src": "3411:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3798:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3808:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3820:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3816:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3808:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3855:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3866:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3851:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3874:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3880:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3844:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3900:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4034:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3908:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3900:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3778:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3793:4:2",
														"type": ""
													}
												],
												"src": "3627:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4223:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4233:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4245:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4256:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4241:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4233:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4280:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4291:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4276:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4299:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4305:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4295:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4269:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4325:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4459:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4333:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4325:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4203:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4218:4:2",
														"type": ""
													}
												],
												"src": "4052:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4575:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4585:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4585:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4665:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4689:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4674:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4621:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4621:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4547:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4559:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4570:4:2",
														"type": ""
													}
												],
												"src": "4477:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4745:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4755:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4771:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4765:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4765:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4738:6:2",
														"type": ""
													}
												],
												"src": "4705:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4882:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4899:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4904:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4892:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4892:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4920:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4939:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4944:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4920:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4854:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4859:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4870:11:2",
														"type": ""
													}
												],
												"src": "4786:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5005:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5015:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5038:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5020:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5015:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5049:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5072:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5054:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5049:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5212:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5214:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5214:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5214:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5140:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5208:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5136:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5136:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5130:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:81:2"
															},
															"nodeType": "YulIf",
															"src": "5127:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5244:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5255:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5251:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4992:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4995:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5001:3:2",
														"type": ""
													}
												],
												"src": "4961:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5314:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5324:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5347:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5329:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5324:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5358:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5381:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5363:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5358:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5405:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5407:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5407:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5407:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5402:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5395:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:9:2"
															},
															"nodeType": "YulIf",
															"src": "5392:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5437:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5446:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5449:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5442:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5442:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5437:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5303:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5306:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5312:1:2",
														"type": ""
													}
												],
												"src": "5272:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5518:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5523:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5518:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5552:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5575:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5557:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5557:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5552:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5599:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5601:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5601:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5601:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5593:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5596:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5590:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:8:2"
															},
															"nodeType": "YulIf",
															"src": "5587:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5631:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5643:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5646:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5639:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5631:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5494:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5497:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5503:4:2",
														"type": ""
													}
												],
												"src": "5463:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5705:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5715:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5744:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5726:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5715:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5687:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5697:7:2",
														"type": ""
													}
												],
												"src": "5660:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5804:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5814:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5839:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5832:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5832:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5825:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5814:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5786:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5796:7:2",
														"type": ""
													}
												],
												"src": "5762:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5903:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5913:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5928:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5913:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5885:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5895:7:2",
														"type": ""
													}
												],
												"src": "5858:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6045:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6056:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6045:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6017:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6027:7:2",
														"type": ""
													}
												],
												"src": "5990:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6101:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6118:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6121:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6111:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6111:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6218:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6208:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6239:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6242:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6232:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6073:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6287:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6307:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6297:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6401:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6404:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6394:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6418:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6418:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6418:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6259:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6473:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6490:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6493:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6587:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6590:4:2",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6580:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6611:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6614:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6604:15:2"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "6445:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6720:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6737:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6740:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6730:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6730:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6631:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6843:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6860:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6863:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6853:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6853:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6853:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6754:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6983:126:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7005:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7013:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7001:14:2"
																	},
																	{
																		"hexValue": "416d6f756e74206f66207472616e736665722065786365656473206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7017:34:2",
																		"type": "",
																		"value": "Amount of transfer exceeds limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6994:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7073:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7081:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7069:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7069:15:2"
																	},
																	{
																		"hexValue": "206163726f7373207a6f6e6573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7086:15:2",
																		"type": "",
																		"value": " across zones"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7062:40:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7062:40:2"
														}
													]
												},
												"name": "store_literal_in_memory_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6975:6:2",
														"type": ""
													}
												],
												"src": "6877:232:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7221:75:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7243:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7251:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7239:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7239:14:2"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e207374617274206e657720736561736f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7255:33:2",
																		"type": "",
																		"value": "Only owner can start new season"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7232:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7232:57:2"
														}
													]
												},
												"name": "store_literal_in_memory_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7213:6:2",
														"type": ""
													}
												],
												"src": "7115:181:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7345:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7402:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7411:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7414:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7404:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7404:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7404:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7368:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7393:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7375:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7375:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7365:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7365:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7358:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7358:43:2"
															},
															"nodeType": "YulIf",
															"src": "7355:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7338:5:2",
														"type": ""
													}
												],
												"src": "7302:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7484:56:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7518:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7527:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7530:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7520:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7520:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7520:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7507:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7514:1:2",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7504:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7504:12:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7497:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7497:20:2"
															},
															"nodeType": "YulIf",
															"src": "7494:40:2"
														}
													]
												},
												"name": "validator_revert_t_enum$_CoinTypes_$6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7477:5:2",
														"type": ""
													}
												],
												"src": "7430:110:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7589:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7646:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7655:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7658:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7648:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7648:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7648:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7612:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7637:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7619:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7619:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7609:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7602:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7602:43:2"
															},
															"nodeType": "YulIf",
															"src": "7599:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7582:5:2",
														"type": ""
													}
												],
												"src": "7546:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_enum$_CoinTypes_$6(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_CoinTypes_$6(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_enum$_CoinTypes_$6t_enum$_CoinTypes_$6(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_CoinTypes_$6(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_CoinTypes_$6(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_CoinTypes_$6t_enum$_CoinTypes_$6t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_CoinTypes_$6(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_CoinTypes_$6(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount of transfer exceeds limit\")\n\n        mstore(add(memPtr, 32), \" across zones\")\n\n    }\n\n    function store_literal_in_memory_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can start new season\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_CoinTypes_$6(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063235eed6014610046578063a0478b4f14610062578063c9c3f84914610092575b600080fd5b610060600480360381019061005b9190610689565b6100c2565b005b61007c60048036038101906100779190610622565b61034d565b6040516100899190610740565b60405180910390f35b6100ac60048036038101906100a791906105e2565b610516565b6040516100b9919061079b565b60405180910390f35b6000339050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014e9061077b565b60405180910390fd5b836000819055508260018190555081600281905550836003600080600281111561018457610183610928565b5b600281111561019657610195610928565b5b815260200190815260200160002060006002808111156101b9576101b8610928565b5b60028111156101cb576101ca610928565b5b8152602001908152602001600020819055508260036000600160028111156101f6576101f5610928565b5b600281111561020857610207610928565b5b8152602001908152602001600020600060028081111561022b5761022a610928565b5b600281111561023d5761023c610928565b5b81526020019081526020016000208190555061025a84600261058d565b6003600080600281111561027157610270610928565b5b600281111561028357610282610928565b5b81526020019081526020016000206000600160028111156102a7576102a6610928565b5b60028111156102b9576102b8610928565b5b8152602001908152602001600020819055506102d683600261058d565b60036000600160028111156102ee576102ed610928565b5b6002811115610300576102ff610928565b5b8152602001908152602001600020600080600281111561032357610322610928565b5b600281111561033557610334610928565b5b81526020019081526020016000208190555050505050565b6000848483806003600085600281111561036a57610369610928565b5b600281111561037c5761037b610928565b5b8152602001908152602001600020600084600281111561039f5761039e610928565b5b60028111156103b1576103b0610928565b5b8152602001908152602001600020541015610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f89061075b565b60405180910390fd5b84600360008a600281111561041957610418610928565b5b600281111561042b5761042a610928565b5b8152602001908152602001600020600089600281111561044e5761044d610928565b5b60028111156104605761045f610928565b5b8152602001908152602001600020600082825461047d919061084e565b92505081905550846003600089600281111561049c5761049b610928565b5b60028111156104ae576104ad610928565b5b815260200190815260200160002060008a60028111156104d1576104d0610928565b5b60028111156104e3576104e2610928565b5b8152602001908152602001600020600082825461050091906107c7565b9250508190555060019350505050949350505050565b60006003600084600281111561052f5761052e610928565b5b600281111561054157610540610928565b5b8152602001908152602001600020600083600281111561056457610563610928565b5b600281111561057657610575610928565b5b815260200190815260200160002054905092915050565b6000818361059b919061081d565b905092915050565b6000813590506105b2816109d4565b92915050565b6000813590506105c7816109eb565b92915050565b6000813590506105dc816109fb565b92915050565b600080604083850312156105f9576105f8610957565b5b6000610607858286016105b8565b9250506020610618858286016105b8565b9150509250929050565b6000806000806080858703121561063c5761063b610957565b5b600061064a878288016105b8565b945050602061065b878288016105b8565b935050604061066c878288016105a3565b925050606061067d878288016105cd565b91505092959194509250565b6000806000606084860312156106a2576106a1610957565b5b60006106b0868287016105cd565b93505060206106c1868287016105cd565b92505060406106d2868287016105cd565b9150509250925092565b6106e581610894565b82525050565b60006106f8602d836107b6565b91506107038261095c565b604082019050919050565b600061071b601f836107b6565b9150610726826109ab565b602082019050919050565b61073a816108c0565b82525050565b600060208201905061075560008301846106dc565b92915050565b60006020820190508181036000830152610774816106eb565b9050919050565b600060208201905081810360008301526107948161070e565b9050919050565b60006020820190506107b06000830184610731565b92915050565b600082825260208201905092915050565b60006107d2826108c0565b91506107dd836108c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610812576108116108ca565b5b828201905092915050565b6000610828826108c0565b9150610833836108c0565b925082610843576108426108f9565b5b828204905092915050565b6000610859826108c0565b9150610864836108c0565b925082821015610877576108766108ca565b5b828203905092915050565b600061088d826108a0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b7f416d6f756e74206f66207472616e736665722065786365656473206c696d697460008201527f206163726f7373207a6f6e657300000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e207374617274206e657720736561736f6e00600082015250565b6109dd81610882565b81146109e857600080fd5b50565b600381106109f857600080fd5b50565b610a04816108c0565b8114610a0f57600080fd5b5056fea264697066735822122048866f47431e6316d7b663169960785fbdb2cadd6fcf58429f4cf9da661ccc0a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x235EED60 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA0478B4F EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xC9C3F849 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x689 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x157 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP1 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184 JUMPI PUSH2 0x183 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x22B JUMPI PUSH2 0x22A PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x25A DUP5 PUSH1 0x2 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x2B8 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2D6 DUP4 PUSH1 0x2 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EE JUMPI PUSH2 0x2ED PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FF PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x335 JUMPI PUSH2 0x334 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP4 DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x37C JUMPI PUSH2 0x37B PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39F JUMPI PUSH2 0x39E PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3B0 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x419 JUMPI PUSH2 0x418 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH2 0x44D PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x460 JUMPI PUSH2 0x45F PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49B PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4E3 JUMPI PUSH2 0x4E2 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x7C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B2 DUP2 PUSH2 0x9D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5C7 DUP2 PUSH2 0x9EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5DC DUP2 PUSH2 0x9FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F9 JUMPI PUSH2 0x5F8 PUSH2 0x957 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x607 DUP6 DUP3 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x618 DUP6 DUP3 DUP7 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x957 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x64A DUP8 DUP3 DUP9 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x65B DUP8 DUP3 DUP9 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x66C DUP8 DUP3 DUP9 ADD PUSH2 0x5A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x67D DUP8 DUP3 DUP9 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x957 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B0 DUP7 DUP3 DUP8 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6C1 DUP7 DUP3 DUP8 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6D2 DUP7 DUP3 DUP8 ADD PUSH2 0x5CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x6E5 DUP2 PUSH2 0x894 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH1 0x2D DUP4 PUSH2 0x7B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x703 DUP3 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71B PUSH1 0x1F DUP4 PUSH2 0x7B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x726 DUP3 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x8C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x755 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x774 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x794 DUP2 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x731 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x8CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x828 DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x833 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x843 JUMPI PUSH2 0x842 PUSH2 0x8F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x864 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x877 JUMPI PUSH2 0x876 PUSH2 0x8CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88D DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x416D6F756E74206F66207472616E736665722065786365656473206C696D6974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206163726F7373207A6F6E657300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207374617274206E657720736561736F6E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9DD DUP2 PUSH2 0x882 JUMP JUMPDEST DUP2 EQ PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA04 DUP2 PUSH2 0x8C0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DUP7 PUSH16 0x47431E6316D7B663169960785FBDB2CA 0xDD PUSH16 0xCF58429F4CF9DA661CCC0A64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "137:1558:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1107:579;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;803:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;638:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1107:579;1202:12;1217:10;1202:25;;1254:6;;;;;;;;;;;1246:14;;:4;:14;;;1238:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1318:9;1307:8;:20;;;;1348:9;1337:8;:20;;;;1378:9;1367:8;:20;;;;1443:9;1398:16;:29;1415:11;1398:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:42;1428:11;1398:42;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:54;;;;1507:9;1462:16;:29;1479:11;1462:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:42;1492:11;1462:42;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:54;;;;1571:26;1584:9;1595:1;1571:12;:26::i;:::-;1526:16;:29;1543:11;1526:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:42;1556:11;1526:42;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:71;;;;1653:26;1666:9;1677:1;1653:12;:26::i;:::-;1608:16;:29;1625:11;1608:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:42;1638:11;1608:42;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:71;;;;1192:494;1107:579;;;:::o;803:297::-;956:4;920:9;931:7;940:5;558:6;518:16;:27;535:9;518:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;546:7;518:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:46;;509:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;1012:5:::1;972:16;:27;989:9;972:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;1000:7;972:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;1067:5;1027:16;:25;1044:7;1027:25;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;1053:9;1027:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;1089:4;1082:11;;803:297:::0;;;;;;;;;:::o;638:159::-;729:7;754:16;:27;771:9;754:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;782:7;754:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;747:43;;638:159;;;;:::o;3850:96:1:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:161::-;209:5;247:6;234:20;225:29;;263:44;301:5;263:44;:::i;:::-;152:161;;;;:::o;319:139::-;365:5;403:6;390:20;381:29;;419:33;446:5;419:33;:::i;:::-;319:139;;;;:::o;464:518::-;554:6;562;611:2;599:9;590:7;586:23;582:32;579:119;;;617:79;;:::i;:::-;579:119;737:1;762:64;818:7;809:6;798:9;794:22;762:64;:::i;:::-;752:74;;708:128;875:2;901:64;957:7;948:6;937:9;933:22;901:64;:::i;:::-;891:74;;846:129;464:518;;;;;:::o;988:809::-;1096:6;1104;1112;1120;1169:3;1157:9;1148:7;1144:23;1140:33;1137:120;;;1176:79;;:::i;:::-;1137:120;1296:1;1321:64;1377:7;1368:6;1357:9;1353:22;1321:64;:::i;:::-;1311:74;;1267:128;1434:2;1460:64;1516:7;1507:6;1496:9;1492:22;1460:64;:::i;:::-;1450:74;;1405:129;1573:2;1599:53;1644:7;1635:6;1624:9;1620:22;1599:53;:::i;:::-;1589:63;;1544:118;1701:2;1727:53;1772:7;1763:6;1752:9;1748:22;1727:53;:::i;:::-;1717:63;;1672:118;988:809;;;;;;;:::o;1803:619::-;1880:6;1888;1896;1945:2;1933:9;1924:7;1920:23;1916:32;1913:119;;;1951:79;;:::i;:::-;1913:119;2071:1;2096:53;2141:7;2132:6;2121:9;2117:22;2096:53;:::i;:::-;2086:63;;2042:117;2198:2;2224:53;2269:7;2260:6;2249:9;2245:22;2224:53;:::i;:::-;2214:63;;2169:118;2326:2;2352:53;2397:7;2388:6;2377:9;2373:22;2352:53;:::i;:::-;2342:63;;2297:118;1803:619;;;;;:::o;2428:109::-;2509:21;2524:5;2509:21;:::i;:::-;2504:3;2497:34;2428:109;;:::o;2543:366::-;2685:3;2706:67;2770:2;2765:3;2706:67;:::i;:::-;2699:74;;2782:93;2871:3;2782:93;:::i;:::-;2900:2;2895:3;2891:12;2884:19;;2543:366;;;:::o;2915:::-;3057:3;3078:67;3142:2;3137:3;3078:67;:::i;:::-;3071:74;;3154:93;3243:3;3154:93;:::i;:::-;3272:2;3267:3;3263:12;3256:19;;2915:366;;;:::o;3287:118::-;3374:24;3392:5;3374:24;:::i;:::-;3369:3;3362:37;3287:118;;:::o;3411:210::-;3498:4;3536:2;3525:9;3521:18;3513:26;;3549:65;3611:1;3600:9;3596:17;3587:6;3549:65;:::i;:::-;3411:210;;;;:::o;3627:419::-;3793:4;3831:2;3820:9;3816:18;3808:26;;3880:9;3874:4;3870:20;3866:1;3855:9;3851:17;3844:47;3908:131;4034:4;3908:131;:::i;:::-;3900:139;;3627:419;;;:::o;4052:::-;4218:4;4256:2;4245:9;4241:18;4233:26;;4305:9;4299:4;4295:20;4291:1;4280:9;4276:17;4269:47;4333:131;4459:4;4333:131;:::i;:::-;4325:139;;4052:419;;;:::o;4477:222::-;4570:4;4608:2;4597:9;4593:18;4585:26;;4621:71;4689:1;4678:9;4674:17;4665:6;4621:71;:::i;:::-;4477:222;;;;:::o;4786:169::-;4870:11;4904:6;4899:3;4892:19;4944:4;4939:3;4935:14;4920:29;;4786:169;;;;:::o;4961:305::-;5001:3;5020:20;5038:1;5020:20;:::i;:::-;5015:25;;5054:20;5072:1;5054:20;:::i;:::-;5049:25;;5208:1;5140:66;5136:74;5133:1;5130:81;5127:107;;;5214:18;;:::i;:::-;5127:107;5258:1;5255;5251:9;5244:16;;4961:305;;;;:::o;5272:185::-;5312:1;5329:20;5347:1;5329:20;:::i;:::-;5324:25;;5363:20;5381:1;5363:20;:::i;:::-;5358:25;;5402:1;5392:35;;5407:18;;:::i;:::-;5392:35;5449:1;5446;5442:9;5437:14;;5272:185;;;;:::o;5463:191::-;5503:4;5523:20;5541:1;5523:20;:::i;:::-;5518:25;;5557:20;5575:1;5557:20;:::i;:::-;5552:25;;5596:1;5593;5590:8;5587:34;;;5601:18;;:::i;:::-;5587:34;5646:1;5643;5639:9;5631:17;;5463:191;;;;:::o;5660:96::-;5697:7;5726:24;5744:5;5726:24;:::i;:::-;5715:35;;5660:96;;;:::o;5762:90::-;5796:7;5839:5;5832:13;5825:21;5814:32;;5762:90;;;:::o;5858:126::-;5895:7;5935:42;5928:5;5924:54;5913:65;;5858:126;;;:::o;5990:77::-;6027:7;6056:5;6045:16;;5990:77;;;:::o;6073:180::-;6121:77;6118:1;6111:88;6218:4;6215:1;6208:15;6242:4;6239:1;6232:15;6259:180;6307:77;6304:1;6297:88;6404:4;6401:1;6394:15;6428:4;6425:1;6418:15;6445:180;6493:77;6490:1;6483:88;6590:4;6587:1;6580:15;6614:4;6611:1;6604:15;6754:117;6863:1;6860;6853:12;6877:232;7017:34;7013:1;7005:6;7001:14;6994:58;7086:15;7081:2;7073:6;7069:15;7062:40;6877:232;:::o;7115:181::-;7255:33;7251:1;7243:6;7239:14;7232:57;7115:181;:::o;7302:122::-;7375:24;7393:5;7375:24;:::i;:::-;7368:5;7365:35;7355:63;;7414:1;7411;7404:12;7355:63;7302:122;:::o;7430:110::-;7514:1;7507:5;7504:12;7494:40;;7530:1;7527;7520:12;7494:40;7430:110;:::o;7546:122::-;7619:24;7637:5;7619:24;:::i;:::-;7612:5;7609:35;7599:63;;7658:1;7655;7648:12;7599:63;7546:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "526400",
								"executionCost": "24828",
								"totalCost": "551228"
							},
							"external": {
								"checkTransferAllowed(uint8,uint8)": "infinite",
								"newSeason(uint256,uint256,uint256)": "infinite",
								"transferControl(uint8,uint8,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 413,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 413,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 413,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 363,
									"end": 413,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 396,
									"end": 406,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 387,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 387,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 406,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 387,
									"end": 406,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 406,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 406,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 387,
									"end": 406,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1695,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048866f47431e6316d7b663169960785fbdb2cadd6fcf58429f4cf9da661ccc0a64736f6c63430008070033",
									".code": [
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "235EED60"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "A0478B4F"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "C9C3F849"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 1695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1238,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1337,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1357,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 1387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1387,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1452,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1516,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1571,
											"end": 1597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1571,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1597,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1653,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1653,
											"end": 1679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1679,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1653,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1686,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 956,
											"end": 960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 518,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 553,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 554,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 518,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 518,
											"end": 564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 518,
											"end": 564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 509,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 509,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1017,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 972,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 998,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1072,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1062,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1082,
											"end": 1093,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 1100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 754,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 754,
											"end": 790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 152,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 234,
											"end": 254,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 225,
											"end": 254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 263,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 301,
											"end": 306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 263,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 263,
											"end": 307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 263,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 313,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 313,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 458,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 319,
											"end": 458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 390,
											"end": 410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 381,
											"end": 410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 381,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 419,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 419,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 419,
											"end": 452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 419,
											"end": 452,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 419,
											"end": 452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 458,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 319,
											"end": 458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 319,
											"end": 458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 319,
											"end": 458,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 464,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 590,
											"end": 597,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 586,
											"end": 609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 582,
											"end": 614,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 579,
											"end": 698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 579,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 579,
											"end": 698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 617,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 617,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 617,
											"end": 696,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 617,
											"end": 696,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 617,
											"end": 696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 579,
											"end": 698,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 579,
											"end": 698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 818,
											"end": 825,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 794,
											"end": 816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 762,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 762,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 762,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 826,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 752,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 708,
											"end": 836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 901,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 957,
											"end": 964,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 948,
											"end": 954,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 933,
											"end": 955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 901,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 901,
											"end": 965,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 901,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 891,
											"end": 965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 891,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 982,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 464,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 982,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 464,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1157,
											"end": 1166,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1167,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1137,
											"end": 1257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1176,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1176,
											"end": 1255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1255,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1176,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1257,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1137,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1321,
											"end": 1385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1321,
											"end": 1385,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1321,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1385,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1496,
											"end": 1505,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1460,
											"end": 1524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1460,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1524,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1599,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1652,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1761,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1797,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1943,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1948,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2141,
											"end": 2148,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2096,
											"end": 2149,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2149,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2096,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2149,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2277,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2405,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2422,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2524,
											"end": 2529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2543,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2770,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "2D"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2706,
											"end": 2773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2706,
											"end": 2773,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2706,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2871,
											"end": 2874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2782,
											"end": 2875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2782,
											"end": 2875,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2782,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2902,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2909,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3137,
											"end": 3140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3243,
											"end": 3246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3263,
											"end": 3275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3498,
											"end": 3502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3627,
											"end": 4046,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3627,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3908,
											"end": 4039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 4039,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3908,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 4039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 4039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 4046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 4046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 4046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 4046,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4052,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4052,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4245,
											"end": 4254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4299,
											"end": 4303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4315,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4316,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4459,
											"end": 4463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4333,
											"end": 4464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4333,
											"end": 4464,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4333,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4674,
											"end": 4691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4899,
											"end": 4902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4944,
											"end": 4948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4942,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4949,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4955,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5001,
											"end": 5004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5049,
											"end": 5074,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5049,
											"end": 5074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5136,
											"end": 5210,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5211,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5234,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5127,
											"end": 5234,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5234,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5127,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5255,
											"end": 5256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5244,
											"end": 5260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5244,
											"end": 5260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5266,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5329,
											"end": 5349,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5349,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5329,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5324,
											"end": 5349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5324,
											"end": 5349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5381,
											"end": 5382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5446,
											"end": 5447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5457,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 5597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5598,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5621,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5587,
											"end": 5621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5621,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5587,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5646,
											"end": 5647,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5648,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5631,
											"end": 5648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5631,
											"end": 5648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5654,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5756,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5660,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5744,
											"end": 5749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5726,
											"end": 5750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5726,
											"end": 5750,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5726,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5756,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5825,
											"end": 5846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5977,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5924,
											"end": 5978,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5913,
											"end": 5978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5913,
											"end": 5978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5990,
											"end": 6067,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5990,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6045,
											"end": 6061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6045,
											"end": 6061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6067,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6073,
											"end": 6253,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6073,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6121,
											"end": 6198,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6222,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 6439,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6259,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6404,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 6409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6433,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6445,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6570,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6571,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6587,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6580,
											"end": 6595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6614,
											"end": 6618,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6611,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6619,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6863,
											"end": 6864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 7109,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6877,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7051,
											"name": "PUSH",
											"source": 2,
											"value": "416D6F756E74206F66207472616E736665722065786365656473206C696D6974"
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7086,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "206163726F7373207A6F6E657300000000000000000000000000000000000000"
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7069,
											"end": 7084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 7109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 7109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7115,
											"end": 7296,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7115,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7288,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C79206F776E65722063616E207374617274206E657720736561736F6E00"
										},
										{
											"begin": 7251,
											"end": 7252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7239,
											"end": 7253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7296,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7302,
											"end": 7424,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 7302,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7393,
											"end": 7398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7375,
											"end": 7399,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7375,
											"end": 7399,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7375,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7400,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7414,
											"end": 7415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7404,
											"end": 7416,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7424,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7430,
											"end": 7540,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7430,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7507,
											"end": 7512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7516,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7494,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7494,
											"end": 7534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7532,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7494,
											"end": 7534,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7494,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7430,
											"end": 7540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7430,
											"end": 7540,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7637,
											"end": 7642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7619,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7609,
											"end": 7644,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7599,
											"end": 7662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7648,
											"end": 7660,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7662,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7599,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkTransferAllowed(uint8,uint8)": "c9c3f849",
							"newSeason(uint256,uint256,uint256)": "235eed60",
							"transferControl(uint8,uint8,address,uint256)": "a0478b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum WaterCoinRules.CoinTypes\",\"name\":\"from_coin\",\"type\":\"uint8\"},{\"internalType\":\"enum WaterCoinRules.CoinTypes\",\"name\":\"to_coin\",\"type\":\"uint8\"}],\"name\":\"checkTransferAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a_supply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b_supply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c_supply_\",\"type\":\"uint256\"}],\"name\":\"newSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum WaterCoinRules.CoinTypes\",\"name\":\"from_coin\",\"type\":\"uint8\"},{\"internalType\":\"enum WaterCoinRules.CoinTypes\",\"name\":\"to_coin\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferControl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Code/WaterCoinRules.sol\":\"WaterCoinRules\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Code/WaterCoinRules.sol\":{\"keccak256\":\"0x64526766aae3b52316c91c1b47c33f35d73547cb476dcd7d043da5a7a0ad6ccc\",\"urls\":[\"bzz-raw://da5bf73792546568b6c2db72be4494e02850597a15fd4e38d2abc37517c2066e\",\"dweb:/ipfs/QmQ5KC2DRfhNSuHL9qqVo856cfGtb62kQEkAbL71BfvipU\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Code/WaterCoinRules.sol:WaterCoinRules",
								"label": "A_supply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "Code/WaterCoinRules.sol:WaterCoinRules",
								"label": "B_supply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "Code/WaterCoinRules.sol:WaterCoinRules",
								"label": "C_supply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": "Code/WaterCoinRules.sol:WaterCoinRules",
								"label": "allowedTransfers",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_enum(CoinTypes)6,t_mapping(t_enum(CoinTypes)6,t_uint256))"
							},
							{
								"astId": 22,
								"contract": "Code/WaterCoinRules.sol:WaterCoinRules",
								"label": "_owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(CoinTypes)6": {
								"encoding": "inplace",
								"label": "enum WaterCoinRules.CoinTypes",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(CoinTypes)6,t_mapping(t_enum(CoinTypes)6,t_uint256))": {
								"encoding": "mapping",
								"key": "t_enum(CoinTypes)6",
								"label": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(CoinTypes)6,t_uint256)"
							},
							"t_mapping(t_enum(CoinTypes)6,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(CoinTypes)6",
								"label": "mapping(enum WaterCoinRules.CoinTypes => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c48191819aab6ce5e2529f74c5771ffdad6bfd227d6e6fecb109d704200788064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c48191819aab6ce5e2529f74c5771ffdad6bfd227d6e6fecb109d704200788064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR BASEFEE NOT XOR NOT 0xAA 0xB6 0xCE 0x5E 0x25 0x29 0xF7 0x4C JUMPI PUSH18 0xFFDAD6BFD227D6E6FECB109D704200788064 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c48191819aab6ce5e2529f74c5771ffdad6bfd227d6e6fecb109d704200788064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR BASEFEE NOT XOR NOT 0xAA 0xB6 0xCE 0x5E 0x25 0x29 0xF7 0x4C JUMPI PUSH18 0xFFDAD6BFD227D6E6FECB109D704200788064 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c48191819aab6ce5e2529f74c5771ffdad6bfd227d6e6fecb109d704200788064736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Code/WaterCoinRules.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Code/WaterCoinRules.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Code/WaterCoinRules.sol:31:70:\n   |\n31 |  ... ypes from_coin, CoinTypes to_coin, address to, uint256 value) external transferA ...\n   |                                         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 878,
					"file": "Code/WaterCoinRules.sol",
					"start": 868
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Code/WaterCoinRules.sol": {
				"ast": {
					"absolutePath": "Code/WaterCoinRules.sol",
					"exportedSymbols": {
						"SafeMath": [
							506
						],
						"WaterCoinRules": [
							194
						]
					},
					"id": 195,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 507,
							"src": "25:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "WaterCoinRules",
							"nameLocation": "146:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "WaterCoinRules.CoinTypes",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "A",
											"nameLocation": "184:1:0",
											"nodeType": "EnumValue",
											"src": "184:1:0"
										},
										{
											"id": 4,
											"name": "B",
											"nameLocation": "187:1:0",
											"nodeType": "EnumValue",
											"src": "187:1:0"
										},
										{
											"id": 5,
											"name": "C",
											"nameLocation": "190:1:0",
											"nodeType": "EnumValue",
											"src": "190:1:0"
										}
									],
									"name": "CoinTypes",
									"nameLocation": "174:9:0",
									"nodeType": "EnumDefinition",
									"src": "169:23:0"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "A_supply",
									"nameLocation": "206:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "198:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "198:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "B_supply",
									"nameLocation": "228:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "220:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "220:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "C_supply",
									"nameLocation": "250:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "242:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "allowedTransfers",
									"nameLocation": "319:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "265:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
										"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 14,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 13,
												"name": "CoinTypes",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "274:9:0"
											},
											"referencedDeclaration": 6,
											"src": "274:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_CoinTypes_$6",
												"typeString": "enum WaterCoinRules.CoinTypes"
											}
										},
										"nodeType": "Mapping",
										"src": "265:53:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
											"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
										},
										"valueType": {
											"id": 18,
											"keyType": {
												"id": 16,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 15,
													"name": "CoinTypes",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 6,
													"src": "296:9:0"
												},
												"referencedDeclaration": 6,
												"src": "296:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												}
											},
											"nodeType": "Mapping",
											"src": "287:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
												"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
											},
											"valueType": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "309:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "350:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "342:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "342:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "377:36:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "387:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "396:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "396:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "387:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "387:19:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:0"
									},
									"scope": 194,
									"src": "363:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "499:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 42,
																		"name": "allowedTransfers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "518:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																			"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																		}
																	},
																	"id": 44,
																	"indexExpression": {
																		"id": 43,
																		"name": "from_coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "535:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_CoinTypes_$6",
																			"typeString": "enum WaterCoinRules.CoinTypes"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "518:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																		"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
																	}
																},
																"id": 46,
																"indexExpression": {
																	"id": 45,
																	"name": "to_coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "546:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_CoinTypes_$6",
																		"typeString": "enum WaterCoinRules.CoinTypes"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "518:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 47,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "558:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "518:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206f66207472616e736665722065786365656473206c696d6974206163726f7373207a6f6e6573",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "566:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5",
																"typeString": "literal_string \"Amount of transfer exceeds limit across zones\""
															},
															"value": "Amount of transfer exceeds limit across zones"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09e64d6529a80b037d960cec51c0f9917a41b1530a6fb152fa4b5ec9a84a28a5",
																"typeString": "literal_string \"Amount of transfer exceeds limit across zones\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "509:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "509:105:0"
											},
											{
												"id": 52,
												"nodeType": "PlaceholderStatement",
												"src": "624:1:0"
											}
										]
									},
									"id": 54,
									"name": "transferAllowed",
									"nameLocation": "428:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "from_coin",
												"nameLocation": "454:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "444:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "CoinTypes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "444:9:0"
													},
													"referencedDeclaration": 6,
													"src": "444:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to_coin",
												"nameLocation": "475:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "465:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "CoinTypes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "465:9:0"
													},
													"referencedDeclaration": 6,
													"src": "465:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "492:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:56:0"
									},
									"src": "419:213:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "737:60:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 65,
															"name": "allowedTransfers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "754:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
															}
														},
														"id": 67,
														"indexExpression": {
															"id": 66,
															"name": "from_coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "771:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "754:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
															"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
														}
													},
													"id": 69,
													"indexExpression": {
														"id": 68,
														"name": "to_coin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "782:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_CoinTypes_$6",
															"typeString": "enum WaterCoinRules.CoinTypes"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "754:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 64,
												"id": 70,
												"nodeType": "Return",
												"src": "747:43:0"
											}
										]
									},
									"functionSelector": "c9c3f849",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkTransferAllowed",
									"nameLocation": "647:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "from_coin",
												"nameLocation": "678:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "668:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												},
												"typeName": {
													"id": 56,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 55,
														"name": "CoinTypes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "668:9:0"
													},
													"referencedDeclaration": 6,
													"src": "668:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "to_coin",
												"nameLocation": "699:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "689:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												},
												"typeName": {
													"id": 59,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 58,
														"name": "CoinTypes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "689:9:0"
													},
													"referencedDeclaration": 6,
													"src": "689:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:40:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:9:0"
									},
									"scope": 194,
									"src": "638:159:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "962:138:0",
										"statements": [
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 92,
																"name": "allowedTransfers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "972:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																	"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																}
															},
															"id": 95,
															"indexExpression": {
																"id": 93,
																"name": "from_coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "989:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_CoinTypes_$6",
																	"typeString": "enum WaterCoinRules.CoinTypes"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "972:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
															}
														},
														"id": 96,
														"indexExpression": {
															"id": 94,
															"name": "to_coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "972:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 97,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "972:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "972:45:0"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 100,
																"name": "allowedTransfers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1027:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																	"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																}
															},
															"id": 103,
															"indexExpression": {
																"id": 101,
																"name": "to_coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_CoinTypes_$6",
																	"typeString": "enum WaterCoinRules.CoinTypes"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1027:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
															}
														},
														"id": 104,
														"indexExpression": {
															"id": 102,
															"name": "from_coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "1053:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1027:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 105,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1067:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1027:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1027:45:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1089:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 91,
												"id": 109,
												"nodeType": "Return",
												"src": "1082:11:0"
											}
										]
									},
									"functionSelector": "a0478b4f",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 85,
													"name": "from_coin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 75,
													"src": "920:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												{
													"id": 86,
													"name": "to_coin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												{
													"id": 87,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 84,
												"name": "transferAllowed",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "904:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "904:42:0"
										}
									],
									"name": "transferControl",
									"nameLocation": "812:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "from_coin",
												"nameLocation": "838:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "828:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												},
												"typeName": {
													"id": 74,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 73,
														"name": "CoinTypes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "828:9:0"
													},
													"referencedDeclaration": 6,
													"src": "828:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "to_coin",
												"nameLocation": "859:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "849:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_CoinTypes_$6",
													"typeString": "enum WaterCoinRules.CoinTypes"
												},
												"typeName": {
													"id": 77,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 76,
														"name": "CoinTypes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "849:9:0"
													},
													"referencedDeclaration": 6,
													"src": "849:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_CoinTypes_$6",
														"typeString": "enum WaterCoinRules.CoinTypes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "876:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "868:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "888:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "880:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:67:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "956:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:6:0"
									},
									"scope": 194,
									"src": "803:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1192:494:0",
										"statements": [
											{
												"assignments": [
													121
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "1210:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "1202:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 120,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1202:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"expression": {
														"id": 122,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1217:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1217:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1202:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 126,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1246:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 127,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1254:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1246:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e207374617274206e657720736561736f6e",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1262:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d",
																"typeString": "literal_string \"Only owner can start new season\""
															},
															"value": "Only owner can start new season"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1e91852632c83d7ba62e4b9c752419bf2ebc0d48b7165d3ea8b7cca0ffb036d",
																"typeString": "literal_string \"Only owner can start new season\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1238:58:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "A_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1307:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "a_supply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1318:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1307:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1307:20:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "B_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1337:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "b_supply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1348:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1337:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1337:20:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "C_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "c_supply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1378:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1367:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1367:20:0"
											},
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 144,
																"name": "allowedTransfers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1398:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																	"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																}
															},
															"id": 149,
															"indexExpression": {
																"expression": {
																	"id": 145,
																	"name": "CoinTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1415:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																		"typeString": "type(enum WaterCoinRules.CoinTypes)"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "A",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1415:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_CoinTypes_$6",
																	"typeString": "enum WaterCoinRules.CoinTypes"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1398:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
															}
														},
														"id": 150,
														"indexExpression": {
															"expression": {
																"id": 147,
																"name": "CoinTypes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1428:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																	"typeString": "type(enum WaterCoinRules.CoinTypes)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "C",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "1428:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1398:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "a_supply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1443:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1398:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1398:54:0"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 154,
																"name": "allowedTransfers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1462:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																	"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																}
															},
															"id": 159,
															"indexExpression": {
																"expression": {
																	"id": 155,
																	"name": "CoinTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1479:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																		"typeString": "type(enum WaterCoinRules.CoinTypes)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "B",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1479:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_CoinTypes_$6",
																	"typeString": "enum WaterCoinRules.CoinTypes"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1462:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
															}
														},
														"id": 160,
														"indexExpression": {
															"expression": {
																"id": 157,
																"name": "CoinTypes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1492:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																	"typeString": "type(enum WaterCoinRules.CoinTypes)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "C",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "1492:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1462:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "b_supply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1507:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1462:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1462:54:0"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 164,
																"name": "allowedTransfers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1526:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																	"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																}
															},
															"id": 169,
															"indexExpression": {
																"expression": {
																	"id": 165,
																	"name": "CoinTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1543:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																		"typeString": "type(enum WaterCoinRules.CoinTypes)"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "A",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1543:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_CoinTypes_$6",
																	"typeString": "enum WaterCoinRules.CoinTypes"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1526:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
															}
														},
														"id": 170,
														"indexExpression": {
															"expression": {
																"id": 167,
																"name": "CoinTypes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1556:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																	"typeString": "type(enum WaterCoinRules.CoinTypes)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "B",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "1556:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1526:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 173,
																"name": "a_supply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1584:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "32",
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"expression": {
																"id": 171,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "1571:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$506_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "1571:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1571:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1526:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1526:71:0"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 178,
																"name": "allowedTransfers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1608:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$_$",
																	"typeString": "mapping(enum WaterCoinRules.CoinTypes => mapping(enum WaterCoinRules.CoinTypes => uint256))"
																}
															},
															"id": 183,
															"indexExpression": {
																"expression": {
																	"id": 179,
																	"name": "CoinTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1625:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																		"typeString": "type(enum WaterCoinRules.CoinTypes)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "B",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1625:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_CoinTypes_$6",
																	"typeString": "enum WaterCoinRules.CoinTypes"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1608:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_CoinTypes_$6_$_t_uint256_$",
																"typeString": "mapping(enum WaterCoinRules.CoinTypes => uint256)"
															}
														},
														"id": 184,
														"indexExpression": {
															"expression": {
																"id": 181,
																"name": "CoinTypes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1638:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_CoinTypes_$6_$",
																	"typeString": "type(enum WaterCoinRules.CoinTypes)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "A",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "1638:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_CoinTypes_$6",
																"typeString": "enum WaterCoinRules.CoinTypes"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1608:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 187,
																"name": "b_supply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1666:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "32",
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1677:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"expression": {
																"id": 185,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "1653:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$506_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "1653:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1653:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1608:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1608:71:0"
											}
										]
									},
									"functionSelector": "235eed60",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newSeason",
									"nameLocation": "1116:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "a_supply_",
												"nameLocation": "1134:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1126:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "b_supply_",
												"nameLocation": "1153:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1145:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "c_supply_",
												"nameLocation": "1172:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1164:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:57:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:0:0"
									},
									"scope": 194,
									"src": "1107:579:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "137:1558:0",
							"usedErrors": []
						}
					],
					"src": "0:1695:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 227,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															210
														],
														"declarations": [
															{
																"constant": false,
																"id": 210,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 227,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 216,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 222,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 220,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 221,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 224,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 225,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 226,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 506,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 255,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 242,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 248,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 240,
															"id": 247,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 250,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 251,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 253,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 240,
														"id": 254,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 506,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 276,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 274,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 268,
															"id": 275,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 283,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 284,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 292,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 290,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 268,
															"id": 291,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 294,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 295,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 268,
														"id": 296,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 506,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 318,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 310,
															"id": 317,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 321,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 323,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 310,
														"id": 324,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 506,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 346,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 338,
															"id": 345,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 348,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 349,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 338,
														"id": 352,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 506,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 506,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 380,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 381,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 506,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 394,
												"id": 398,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 506,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 413,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 506,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 426,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 428,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 506,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 453,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 443,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 444,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 446,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 442,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 448,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 441,
														"id": 452,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 436,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 506,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 478,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 468,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 471,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 467,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 473,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 475,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 466,
														"id": 477,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 506,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 503,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 493,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 496,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 492,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 498,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 499,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 500,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 491,
														"id": 502,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 506,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 507,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			}
		}
	}
}